{% extends 'edit.html.twig' %}

{# EDIT : SITE #}

{% block stylesheets %}
    {{ parent() }}
{% endblock %}

{% block headincl %}
  <!-- Plotly -->
  <script src="{{ asset('e3s/vendors/plotly.js/plotly-latest.min.js') }}"></script>
{% endblock %}

{% block body %}
    {{ parent() }}
            
    <!-- Definition of Modal (s): myModalCommune: Common form for the dynamic addition of a new  Municipality -->
    <div id="myModalCommune" class="modal" role="dialog">
    <div class="modal-dialog">
    <div class="modal-content">
         <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">{{'title.commune'|trans}}</h4>
         </div>
         <div class="modal-body">
           <div id='content_to_change_station'>
                   {{ render(controller('BbeesE3sBundle:Commune:newmodal' )) }}
           </div>
         </div>
         <div class="modal-footer">
           <button type="button" class="btn btn-default" data-dismiss="modal">{{'buton.Close'|trans}}</button>
         </div>
       </div>
     </div>
    </div>
    <!-- Definition of Modal (s): detailsModal for the display of stations around the latitude / longitude GPS point -->       
    <div id="detailsModal" class="modal fade" role="dialog">
      <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">{{'modal-title.Station - Localisation'|trans}}</h4>
          </div>
          <div class="modal-body">
                <div class="geo-container">
                <div id="station-geo-map" style="width:100%">
                </div>
                <div class="geo-overlay">
                <i class="fa fa-spinner fa-spin fa-4x"></i>
                </div>
                </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">{{'buton.Close'|trans}}</button>
          </div>
        </div>
      </div>
    </div>
                   
{% endblock %}


{% block scripts %}
{{ parent() }}

<script type="text/javascript">  

{% if edit_form.vars.data.paysFk.id is defined %}
    {% set paysId = edit_form.vars.data.paysFk.id %}
{% else %}  
    {% set paysId = 0 %}
{% endif %}
    
    var nbSelectPays = 0;  
    $(document).ready(function(){
        {% if action == 'new'  %} 
            //  
        {% endif %}
        {% if action == 'edit'  %}   
            // General action on form: form lock (default) / user role: app.user ... 
            {% if not is_granted('ROLE_ADMIN') %}  
                $('#bbees_e3sbundle_station_codeStation').attr("disabled", true); 
                $(document).on('submit','form[name="bbees_e3sbundle_station"]',function(ev){
                $('#bbees_e3sbundle_station_codeStation').attr("disabled", false); 
             });
            {% endif %}
        {% endif %}
            
        // Capitalize function maj() 
        maj($('#bbees_e3sbundle_station_codeStation'));
        maj($('#bbees_e3sbundle_station_nomStation'));          

        // specific features: automatically assigns the id of the selected country
        var paysId = {{paysId}};
        $('#myModalCommune').find('#bbees_e3sbundle_commune_paysFk').val(paysId);       
        // specific features: automatically assigns the id of the selected country if a new contry is selected     
        $('#bbees_e3sbundle_station_paysFk').change(function (e) { 
            if (nbSelectPays == 0 ) { //  memorisation  de la liste des communes 
                $listeOptionCommune =  $('select#bbees_e3sbundle_station_communeFk').find('option');
            }
            var paysCode = $('#bbees_e3sbundle_station_paysFk option:selected').text();
            paysCode = paysCode.split(' ').join('_');
            var paysId = $('#bbees_e3sbundle_station_paysFk option:selected').val();           
            $('#myModalCommune').find('#bbees_e3sbundle_commune_paysFk').val(paysId);
            // modification de la liste déroulante des communes
            var nbCommune = $("#bbees_e3sbundle_station_communeFk").length;
            var newlisteCommune = '<option value="" selected="selected">{{'Choose a Commune'|trans}}</option>';          
            var compt = 0;
            $('select#bbees_e3sbundle_station_communeFk option').remove();
            $listeOptionCommune.each(function() {
                var communeInTab = $(this).text().split("|");
                var communeVal = $(this).val();
                var nbSeparateur = communeInTab.length;
                if (nbSeparateur == 3 && communeInTab[2] == paysCode) { //  creation of the new list of municipalities
                    newlisteCommune = newlisteCommune+'<option value="'+communeVal+'" >'+$(this).text()+'</option>'; 
                }
                compt++;
            });
            nbSelectPays ++;
            $('select#bbees_e3sbundle_station_communeFk').append(newlisteCommune);
        })
        
        // Common Modal Management Add the "Add new Municipality" button
        // 1) Addition of the "Add new Municipality" button
        var $container = $('select[id="bbees_e3sbundle_station_communeFk"]');
        var $addBoutonAdd = $('<div><button type="button" class="btn btn-info btn-sm" data-toggle="modal" data-target="#myModalCommune">{{'buton.Add a new Commune'|trans}}</button></div></br>');
        $addBoutonAdd.insertBefore($container);
        // 2) Actions of the modal myModalCommune; (i) capitalization of the municipality name and region Name fields (ii) automatic generation of the common code
        $('#myModalCommune').on('show.bs.modal', function (e) {
            var modal = $(this);
            $('#bbees_e3sbundle_commune_paysFk').attr("disabled", true); 
            $('#bbees_e3sbundle_commune_codeCommune').attr("disabled", true);
            $('#bbees_e3sbundle_commune_nomCommune').keyup(function (e) {
                var modal = $(this);
                // var nomCommune = modal.val().toUpperCase().replace(/^\s+|\s+$/gm,'_');   
                var nomCommuneUpperCase = modal.val().toUpperCase();  
                //$(this).val(nomCommune);
                $(this).val(nomCommuneUpperCase);
                var nomPays = $('#bbees_e3sbundle_commune_paysFk option:selected').text();
                nomPays = nomPays.split(' ').join('_');
                var nomRegion = $('#bbees_e3sbundle_commune_nomRegion').val();
                //modal.val(nomCommune);                
                modal.val(nomCommuneUpperCase);
                var nomCommune = nomCommuneUpperCase.split(' ').join('_');
                $('#bbees_e3sbundle_commune_codeCommune').val(nomCommune+'|'+nomRegion.split(' ').join('_')+'|'+nomPays);
            })
            $('#bbees_e3sbundle_commune_nomRegion').keyup(function (e) {
                var modal = $(this);
                // var nomRegion = modal.val().toUpperCase().replace(/^\s+|\s+$/gm,'_');
                var nomRegionUpperCase = modal.val().toUpperCase();
                // $(this).val(nomRegion);
                $(this).val(nomRegionUpperCase);
                var nomPays = $('#bbees_e3sbundle_commune_paysFk option:selected').text();
                nomPays = nomPays.split(' ').join('_');
                var nomCommune = $('#bbees_e3sbundle_commune_nomCommune').val();
                // modal.val(nomRegion);
                modal.val(nomRegionUpperCase);
                var nomRegion = nomRegionUpperCase.split(' ').join('_');
                $('#bbees_e3sbundle_commune_codeCommune').val(nomCommune.split(' ').join('_')+'|'+nomRegion+'|'+nomPays);
            })
            })  
        // 3) Actions after the creation of a new municipality 
        $(document).on('submit','form[name="bbees_e3sbundle_commune"]',function(ev){
            $('#bbees_e3sbundle_commune_paysFk').attr("disabled", false); 
            $('#bbees_e3sbundle_commune_codeCommune').attr("disabled", false);             
            ev.preventDefault();		
            var form = $(this);               
            var $container = $('#bbees_e3sbundle_station_communeFk');    
            callAjax(form, $container);
	}); 
        
        // Management of the "Show Station" button
        // 1) Added button "See Stations"
        var $container = $('select[id="bbees_e3sbundle_station_precisionLatLongVocFk"]');
        var $addBoutonAdd = $('<div><button type="button" class="btn btn-info btn-sm" data-toggle="modal" data-target="#detailsModal">{{'buton.See Stations Around'|trans}}</button></div></br>');
        $addBoutonAdd.insertBefore($container);
        //
        $('#detailsModal').on('show.bs.modal', function (ev) {
            var latitude = $('#bbees_e3sbundle_station_latDegDec').val();
            var longitude = $('#bbees_e3sbundle_station_longDegDec').val();
            //var data = $(this).serialize();
            var  data = {'latitude': latitude, 'longitude':longitude };            
            $.ajax({
                type: 'POST',
                data: data,
                url: "{{ path('geocoordstations') }}",
                error: function(jqXHR, textStatus, errorThrown) {
                    alert('error ajax request : '+errorThrown);
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                },
                beforeSend: function(htmlResponse) {  
                    $(".geo-overlay").show();
                                },
                success: function (response) {
                    $(".geo-overlay").hide();
                    gd = stationsPlot(response.stations, latitude, longitude);
                }
            });
        });
               
    });
 </script>
{% endblock %}